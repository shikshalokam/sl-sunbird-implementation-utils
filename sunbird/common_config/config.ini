[pre-prod]
host = http://localhost:3569/
internal_kong_ip = http://localhost:3569/
keyclockapibody = "email": "rahul@yahoo.com","password": "password"
  
authorization = Bearer # ADD_YOUR_TOKEN_HERE
authorizationforhost = Bearer # ADD_YOUR_TOKEN_HERE
appname = diksha
x-channel-id = 0125747659358699520
internal-access-token = 8c3a94f0931e01a4940a
keyclockapicontent-type = application/x-www-form-urlencoded
content-type = application/json
keyclockapiurl = /auth/realms/sunbird/protocol/openid-connect/token
userinfoapiurl = api/user/v1/search
searchforlocation = api/data/v1/location/search
criteriauploadapiurl = private/mlsurvey/api/v1/criteria/upload
themeuploadapiurl = private/mlsurvey/api/v1/frameworks/uploadThemes/
; solutionCreate
solutioncreationapiurl = project/v1/solutions/create
surveysolutioncreationapiurl = private/mlsurvey/api/v1/surveys/createSolutionTemplate
questionuploadapiurl = private/mlsurvey/api/v1/questions/bulkCreate
criteriarubricuploadapiurl = private/mlsurvey/api/v1/solutions/uploadCriteriaRubricExpressions/
themerubricuploadapiurl = private/mlsurvey/api/v1/solutions/uploadThemesRubricExpressions/
importsurveysolutiontemplateurl = private/mlsurvey/api/v1/surveys/importSurveryTemplateToSolution/
importsurveysolutiontoprogramurl = private/mlsurvey/api/v1/surveys/mapSurverySolutionToProgram/
solutiontoprogrammappingapiurl = private/mlsurvey/api/v1/solutions/importFromSolution
; programList
fetchprograminfoapiurl = project/v1/programs/list?page=1&limit=5&search=
; solutionList
fetchsolutiondetails = project/v1/solutions/list?page=1&limit=100&search=&type=
frameworkcreationapi = private/mlsurvey/api/v1/frameworks/create
; solutionUpdate
solutionupdateapi = project/v1/solutions/update/
listofrolesapi = private/mlsurvey/api/v1/userRoles/list
ferchsolutioncriteria = private/mlsurvey/api/v1/solutionDetails/criteria/
; projectBulkCreate
projectuploadapi = project/v1/project/templates/bulkCreate
taskuploadapi = private/mlprojects/api/v1/project/templateTasks/bulkCreate/
projectsolutioncreationapi = private/mlprojects/api/v1/solutions/create
mapsolutiontoproject = project/v1/project/templates/importProjectTemplate/
fetchsolutiondoc = private/mlcore/api/v1/solutions/getDetails/
; programCreate
programcreationurl = project/v1/programs/create
pdpmurl = private/mlsurvey/api/v1/userExtension/bulkUpload
fetchlink = private/mlcore/api/v1/solutions/fetchLink/
courseprogrammapping = private/mlcore/api/v1/solutions/create
readcourseurl = /api/content/v1/read/
fetchsolutiondump = private/mlcore/api/v1/solutions/getDetails/
fetchorgdetails = api/org/v1/search
fetchprojectlist = private/mlprojects/api/v1/library/categories/projects
dbfindapi-url = private/mlcore/api/v1/admin/dbFind/
addingbasetemp = private/mlcore/api/v1/certificateBaseTemplates/createOrUpdate
dbfindapi = private/mlcore/api/v1/admin/dbFind/certificateBaseTemplates
addcertificatetemplate = private/mlcore/api/v1/certificateTemplates/createOrUpdate
editsvgtemp = private/mlcore/api/v1/certificateTemplates/createSvg?baseTemplateId=
uploadcertificatetosvg = private/mlcore/api/v1/certificateTemplates/uploadTemplate/
updatecertificatesolu = private/mlcore/api/v1/solutions/update/
updateprojecttemplate = private/mlprojects/api/v1/project/templates/update/


; projecttemplatesbulkcreate = /v1/project/templates/bulkCreate
; projecttemplatesbulkupdate = /v1/project/templates/bulkUpdate
; projecttemplatesupdate = /v1/project/templates/update/
; projecttemplateslistbyids = /v1/project/templates/listByIds
; projecttemplatesimportProjectTemplate = /v1/project/templates/importProjectTemplate/
; projecttemplatesunnatidetails = /unnati/v1/project/templates/details/
; projecttemplatesdetails = /v1/project/templates/details

; solutioncreate = /v1/solutions/create
; solutionupdate = /v1/solutions/update/{solutionId}
; solutionaddRolesInScope = /v1/solutions/addRolesInScope/{solutionId}
; solutiondetailsBasedOnRoleAndLocation = /v1/solutions/detailsBasedOnRoleAndLocation/{solutionId}
; solutionremoveRolesInScope = /v1/solutions/removeRolesInScope/{solutionId}
; solutionfetchLink = /v1/solutions/fetchLink/{solutionId}
; solutionaddEntitiesInScope = /v1/solutions/addEntitiesInScope/{solutionId}
; solutionremoveEntitiesInScope = /v1/solutions/removeEntitiesInScope/{solutionId}
; solutionforUserRoleAndLocation = /v1/solutions/forUserRoleAndLocation
; solutiontargetedSolutions = /v1/solutions/targetedSolutions
; solutionverifyLink = /v1/solutions/verifyLink/{link}
; solutionverifySolution = /v1/solutions/verifySolution/{solutionId}
; solutionlist = /v1/solutions/list
; solutiongetDetails = /v1/solutions/getDetails/{solutionId}

; programscreate = /v1/programs/create
; programsupdate = /v1/programs/update/{programId}
; programsdetails = /v1/programs/details/{programId}
; programsaddRolesInScope = /v1/programs/addRolesInScope/{programId}
; programsaddEntitiesInScope = /v1/programs/addEntitiesInScope/{programId}
; programsremoveRolesInScope = /v1/programs/removeRolesInScope/{programId}
; programsremoveEntitiesInScope = /v1/programs/removeEntitiesInScope/{programId}
; programslist = /v1/programs/list
; programsjoin = /v1/programs/join/{programId}


onelogo-onesignature = 1L1S
onelogo-twosignature = 1L2S
twologo-onesignature = 2L1S
twologo-twosignature = 2L2S
[local]
host = http://localhost:3569/
host1 = http://localhost:5000/
internal_kong_ip = http://localhost:3569/
keyclockapibody = '{"email": "rahul@yahoo.com","password": "password"}'
email = rahul@yahoo.com
password = password
authorization = Bearer  # ADD_YOUR_TOKEN_HERE
authorizationforhost = Bearer # ADD_YOUR_TOKEN_HERE
appname = diksha
x-channel-id = 0125747659358699520
internal-access-token = 8c3a94f0931e01a4940a
keyclockapicontent-type = application/x-www-form-urlencoded
content-type = application/json
keyclockapiurl = user/v1/account/login
userinfoapiurl = api/user/v1/account/search
searchforlocation = project/v1/programs/create
criteriauploadapiurl = private/mlsurvey/api/v1/criteria/upload
themeuploadapiurl = private/mlsurvey/api/v1/frameworks/uploadThemes/
solutioncreationapiurl = private/mlsurvey/api/v1/observations/importFromFramework
surveysolutioncreationapiurl = private/mlsurvey/api/v1/surveys/createSolutionTemplate
questionuploadapiurl = private/mlsurvey/api/v1/questions/bulkCreate
criteriarubricuploadapiurl = private/mlsurvey/api/v1/solutions/uploadCriteriaRubricExpressions/
themerubricuploadapiurl = private/mlsurvey/api/v1/solutions/uploadThemesRubricExpressions/
importsurveysolutiontemplateurl = private/mlsurvey/api/v1/surveys/importSurveryTemplateToSolution/
importsurveysolutiontoprogramurl = private/mlsurvey/api/v1/surveys/mapSurverySolutionToProgram/
solutiontoprogrammappingapiurl = private/mlsurvey/api/v1/solutions/importFromSolution
fetchprograminfoapiurl = project/v1/programs/list?page=1&limit=5&search=
fetchsolutiondetails = project/v1/solutions/list?page=1&limit=100&search=&type=observation&subType
frameworkcreationapi = private/mlsurvey/api/v1/frameworks/create
solutionupdateapi = project/v1/solutions/update/
listofrolesapi = private/mlsurvey/api/v1/userRoles/list
ferchsolutioncriteria = private/mlsurvey/api/v1/solutionDetails/criteria/
; Create
projectuploadapi = project/v1/project/templates/bulkCreate
taskuploadapi = project/v1/project/templateTasks/bulkCreate/
projectsolutioncreationapi = project/v1/solutions/create
mapsolutiontoproject = project/v1/project/templates/importProjectTemplate/
fetchsolutiondoc = project/v1/solutions/getDetails/
programcreationurl = project/v1/programs/create
pdpmurl = private/mlsurvey/api/v1/userExtension/bulkUpload
fetchlink = project/v1/solutions/fetchLink/
courseprogrammapping = private/mlcore/api/v1/solutions/create
readcourseurl = api/content/v1/read/
fetchsolutiondump = private/mlcore/api/v1/solutions/getDetails/
fetchorgdetails = api/org/v1/search
fetchprojectlist = private/mlprojects/api/v1/library/categories/projects
addingbasetemp = private/mlcore/api/v1/certificateBaseTemplates/createOrUpdate
dbfindapi = private/mlcore/api/v1/admin/dbFind/certificateBaseTemplates
addcertificatetemplate = private/mlcore/api/v1/certificateTemplates/createOrUpdate
editsvgtemp = private/mlcore/api/v1/certificateTemplates/createSvg?baseTemplateId=
uploadcertificatetosvg = private/mlcore/api/v1/certificateTemplates/uploadTemplate/
updatecertificatesolu = private/mlcore/api/v1/solutions/update/
updateprojecttemplate = private/mlprojects/api/v1/project/templates/update/
onelogo-onesignature = 1L1S
onelogo-twosignature = 1L2S
twologo-onesignature = 2L1S
twologo-twosignature = 2L2S